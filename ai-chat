#!/usr/bin/env ruby
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

$LOAD_PATH << "#{Dir.pwd}/lib"
require "optparse"
require "openai"

def main(config)
  openai = OpenAI.new(config)
  session = openai.new_session()

  session.enable_auto_sync(config[:history_file]) do
    session.append do |sess|
      sess.new_message("system")
          .text("You are a helpfull assistent.\n")
    end
  end

  puts "Chat with the assistant (type 'exit' to end):"

  loop do
    print "You: "
    user_input = gets.chomp
    break if user_input.downcase == "exit"

    session.append do |sess|
      sess.new_message("user")
          .text(user_input)
    end

    response = openai.new_request do |req|
      req.attach_session(session)
    end

    if response.success?
      assistant_reply = response.completion.strip
      puts "AI: #{assistant_reply}"

      session.append do |sess|
        sess.new_message("assistant")
            .text(assistant_reply)
      end
    else
      puts "Error: #{response.error}"
    end
  end

  puts "Chat ended."
end

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: ai-chat [options]"

  opts.on("--history-file [HISTORYFILE]", "Chat history file") do |history_file|
    options[:history_file] = history_file
  end

  opts.on("--token [TOKEN]", "OpenAI token") do |token|
    options[:token] = token
  end
end.parse!

main(options)
